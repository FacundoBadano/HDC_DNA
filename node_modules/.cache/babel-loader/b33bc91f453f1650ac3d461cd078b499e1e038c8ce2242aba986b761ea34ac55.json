{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelCheckbox as _vModelCheckbox, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"flex flex-col justify-center items-center min-h-screen bg-gray-100\"\n};\nconst _hoisted_2 = {\n  class: \"w-3/5 bg-white p-8 shadow-lg rounded-lg space-y-6\"\n};\nconst _hoisted_3 = {\n  class: \"flex items-center space-x-3\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"flex items-center space-x-3\"\n};\nconst _hoisted_5 = [\"readonly\"];\nconst _hoisted_6 = {\n  key: 1,\n  class: \"text-red-500 text-center\"\n};\nconst _hoisted_7 = {\n  key: 2,\n  class: \"mt-4\"\n};\nconst _hoisted_8 = {\n  class: \"bg-gray-100 p-3 rounded text-center\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[7] || (_cache[7] = _createElementVNode(\"h1\", {\n    class: \"text-3xl font-bold text-center\"\n  }, \" Calculadora de Distancia entre Secuencias ADN \", -1 /* HOISTED */)), _cache[8] || (_cache[8] = _createElementVNode(\"div\", {\n    class: \"bg-blue-500 text-white p-4 rounded text-center\"\n  }, \" Indicar ambas secuencias para calcular su distancia. \", -1 /* HOISTED */)), _createCommentVNode(\" Input de la secuencia original \"), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.sequence1 = $event),\n    type: \"text\",\n    class: \"border border-gray-300 rounded p-3 w-full\",\n    placeholder: \"Ingrese la secuencia original de ADN (G, T, C, A)\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.sequence1]]), _createCommentVNode(\" Opción para perturbar la secuencia \"), _createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.perturbate = $event),\n    class: \"w-5 h-5\",\n    onChange: $setup.handlePerturbationChange\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelCheckbox, $setup.perturbate]]), _cache[4] || (_cache[4] = _createElementVNode(\"label\", {\n    class: \"text-lg\"\n  }, \"Perturbar la secuencia original\", -1 /* HOISTED */))]), _createCommentVNode(\" Input de porcentaje de perturbación (solo visible si perturbate es true) \"), $setup.perturbate ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_cache[5] || (_cache[5] = _createElementVNode(\"label\", {\n    class: \"text-lg\"\n  }, \"Porcentaje de perturbación:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.perturbationPercentage = $event),\n    type: \"number\",\n    min: \"1\",\n    max: \"100\",\n    class: \"border border-gray-300 rounded p-2 w-20\",\n    onInput: $setup.generatePerturbedSequence\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $setup.perturbationPercentage]])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Input de la segunda secuencia (rellenado automáticamente si perturbate es true) \"), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.sequence2 = $event),\n    type: \"text\",\n    class: \"border border-gray-300 rounded p-3 w-full\",\n    placeholder: \"Ingrese la segunda secuencia de ADN (G, T, C, A)\",\n    readonly: $setup.perturbate\n  }, null, 8 /* PROPS */, _hoisted_5), [[_vModelText, $setup.sequence2]]), _createCommentVNode(\" Botón para calcular distancia \"), _createElementVNode(\"button\", {\n    onClick: $setup.calculateDistance,\n    class: \"bg-blue-500 text-white px-6 py-3 rounded hover:bg-blue-600 w-full\"\n  }, \" Calcular Distancia \"), _createCommentVNode(\" Mostrar error si hay \"), $setup.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, _toDisplayString($setup.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Mostrar distancia calculada \"), $setup.distance !== null ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_cache[6] || (_cache[6] = _createElementVNode(\"h2\", {\n    class: \"text-xl font-semibold text-center\"\n  }, \"Distancia Calculada:\", -1 /* HOISTED */)), _createElementVNode(\"p\", _hoisted_8, _toDisplayString($setup.distance), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createCommentVNode","_cache","$event","$setup","sequence1","type","placeholder","_hoisted_3","perturbate","onChange","handlePerturbationChange","_hoisted_4","perturbationPercentage","min","max","onInput","generatePerturbedSequence","sequence2","readonly","_hoisted_5","onClick","calculateDistance","error","_hoisted_6","_toDisplayString","distance","_hoisted_7","_hoisted_8"],"sources":["/var/www/html/HDC_ADN/src/App.vue"],"sourcesContent":["<template>\n  <div\n    class=\"flex flex-col justify-center items-center min-h-screen bg-gray-100\"\n  >\n    <div class=\"w-3/5 bg-white p-8 shadow-lg rounded-lg space-y-6\">\n      <h1 class=\"text-3xl font-bold text-center\">\n        Calculadora de Distancia entre Secuencias ADN\n      </h1>\n\n      <div class=\"bg-blue-500 text-white p-4 rounded text-center\">\n        Indicar ambas secuencias para calcular su distancia.\n      </div>\n\n      <!-- Input de la secuencia original -->\n      <input\n        v-model=\"sequence1\"\n        type=\"text\"\n        class=\"border border-gray-300 rounded p-3 w-full\"\n        placeholder=\"Ingrese la secuencia original de ADN (G, T, C, A)\"\n      />\n\n      <!-- Opción para perturbar la secuencia -->\n      <div class=\"flex items-center space-x-3\">\n        <input\n          type=\"checkbox\"\n          v-model=\"perturbate\"\n          class=\"w-5 h-5\"\n          @change=\"handlePerturbationChange\"\n        />\n        <label class=\"text-lg\">Perturbar la secuencia original</label>\n      </div>\n\n      <!-- Input de porcentaje de perturbación (solo visible si perturbate es true) -->\n      <div v-if=\"perturbate\" class=\"flex items-center space-x-3\">\n        <label class=\"text-lg\">Porcentaje de perturbación:</label>\n        <input\n          v-model=\"perturbationPercentage\"\n          type=\"number\"\n          min=\"1\"\n          max=\"100\"\n          class=\"border border-gray-300 rounded p-2 w-20\"\n          @input=\"generatePerturbedSequence\"\n        />\n      </div>\n\n      <!-- Input de la segunda secuencia (rellenado automáticamente si perturbate es true) -->\n      <input\n        v-model=\"sequence2\"\n        type=\"text\"\n        class=\"border border-gray-300 rounded p-3 w-full\"\n        placeholder=\"Ingrese la segunda secuencia de ADN (G, T, C, A)\"\n        :readonly=\"perturbate\"\n      />\n\n      <!-- Botón para calcular distancia -->\n      <button\n        @click=\"calculateDistance\"\n        class=\"bg-blue-500 text-white px-6 py-3 rounded hover:bg-blue-600 w-full\"\n      >\n        Calcular Distancia\n      </button>\n\n      <!-- Mostrar error si hay -->\n      <div v-if=\"error\" class=\"text-red-500 text-center\">{{ error }}</div>\n\n      <!-- Mostrar distancia calculada -->\n      <div v-if=\"distance !== null\" class=\"mt-4\">\n        <h2 class=\"text-xl font-semibold text-center\">Distancia Calculada:</h2>\n        <p class=\"bg-gray-100 p-3 rounded text-center\">{{ distance }}</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from \"vue\";\nimport axios from \"axios\";\n\n// Variables reactivas\nconst sequence1 = ref(\"\");\nconst sequence2 = ref(\"\");\nconst perturbate = ref(false);\nconst perturbationPercentage = ref(5);\nconst distance = ref(null);\nconst error = ref(null);\n\n// Función para perturbar la cadena original\nconst perturbSequence = (sequence, percentage) => {\n  let seqArray = sequence.split(\"\");\n  let numChanges = Math.ceil(seqArray.length * (percentage / 100));\n  const validChars = [\"G\", \"T\", \"C\", \"A\"];\n\n  for (let i = 0; i < numChanges; i++) {\n    let index = Math.floor(Math.random() * seqArray.length);\n    let newChar;\n    do {\n      newChar = validChars[Math.floor(Math.random() * validChars.length)];\n    } while (newChar === seqArray[index]); // Asegurar que el carácter cambie\n    seqArray[index] = newChar;\n  }\n\n  return seqArray.join(\"\");\n};\n\n// Función para generar y mostrar la cadena perturbada\nconst generatePerturbedSequence = () => {\n  if (perturbate.value && sequence1.value) {\n    sequence2.value = perturbSequence(\n      sequence1.value,\n      perturbationPercentage.value\n    );\n  }\n};\n\n// Función que se ejecuta al cambiar el checkbox de perturbación\nconst handlePerturbationChange = () => {\n  if (perturbate.value) {\n    generatePerturbedSequence();\n  } else {\n    sequence2.value = \"\"; // Limpiar el segundo input si se desactiva la perturbación\n  }\n};\n\n// Función para calcular la distancia\nconst calculateDistance = async () => {\n  distance.value = null;\n  error.value = null;\n\n  if (!sequence1.value) {\n    error.value = \"Por favor, ingrese la secuencia original.\";\n    return;\n  }\n\n  let seq2ToSend = sequence2.value;\n\n  if (perturbate.value) {\n    if (\n      perturbationPercentage.value < 1 ||\n      perturbationPercentage.value > 100\n    ) {\n      error.value = \"El porcentaje de perturbación debe estar entre 1 y 100.\";\n      return;\n    }\n    // La cadena perturbada ya fue generada y mostrada en sequence2\n    seq2ToSend = sequence2.value;\n  } else if (!sequence2.value) {\n    error.value = \"Por favor, ingrese la segunda secuencia.\";\n    return;\n  }\n\n  try {\n    const response = await axios.post(\"http://127.0.0.1:8000/generate-hv\", {\n      sequence1: sequence1.value,\n      sequence2: seq2ToSend,\n    });\n\n    distance.value = response.data.distance.toFixed(4);\n  } catch (err) {\n    error.value =\n      err.response?.data?.detail || \"Error al comunicarse con el servidor.\";\n  }\n};\n</script>\n"],"mappings":";;EAEIA,KAAK,EAAC;AAAoE;;EAErEA,KAAK,EAAC;AAAmD;;EAkBvDA,KAAK,EAAC;AAA6B;;EAtB9CC,GAAA;EAiC6BD,KAAK,EAAC;;mBAjCnC;;EAAAC,GAAA;EA+DwBD,KAAK,EAAC;;;EA/D9BC,GAAA;EAkEoCD,KAAK,EAAC;;;EAE/BA,KAAK,EAAC;AAAqC;;uBAnEpDE,mBAAA,CAsEM,OAtENC,UAsEM,GAnEJC,mBAAA,CAkEM,OAlENC,UAkEM,G,0BAjEJD,mBAAA,CAEK;IAFDJ,KAAK,EAAC;EAAgC,GAAC,iDAE3C,sB,0BAEAI,mBAAA,CAEM;IAFDJ,KAAK,EAAC;EAAgD,GAAC,wDAE5D,sBAEAM,mBAAA,oCAAuC,E,gBACvCF,mBAAA,CAKE;IAnBR,uBAAAG,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAeiBC,MAAA,CAAAC,SAAS,GAAAF,MAAA;IAClBG,IAAI,EAAC,MAAM;IACXX,KAAK,EAAC,2CAA2C;IACjDY,WAAW,EAAC;iDAHHH,MAAA,CAAAC,SAAS,E,GAMpBJ,mBAAA,wCAA2C,EAC3CF,mBAAA,CAQM,OARNS,UAQM,G,gBAPJT,mBAAA,CAKE;IAJAO,IAAI,EAAC,UAAU;IAxBzB,uBAAAJ,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAyBmBC,MAAA,CAAAK,UAAU,GAAAN,MAAA;IACnBR,KAAK,EAAC,SAAS;IACde,QAAM,EAAEN,MAAA,CAAAO;qEAFAP,MAAA,CAAAK,UAAU,E,6BAIrBV,mBAAA,CAA8D;IAAvDJ,KAAK,EAAC;EAAS,GAAC,iCAA+B,qB,GAGxDM,mBAAA,8EAAiF,EACtEG,MAAA,CAAAK,UAAU,I,cAArBZ,mBAAA,CAUM,OAVNe,UAUM,G,0BATJb,mBAAA,CAA0D;IAAnDJ,KAAK,EAAC;EAAS,GAAC,6BAA2B,sB,gBAClDI,mBAAA,CAOE;IA1CV,uBAAAG,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAoCmBC,MAAA,CAAAS,sBAAsB,GAAAV,MAAA;IAC/BG,IAAI,EAAC,QAAQ;IACbQ,GAAG,EAAC,GAAG;IACPC,GAAG,EAAC,KAAK;IACTpB,KAAK,EAAC,yCAAyC;IAC9CqB,OAAK,EAAEZ,MAAA,CAAAa;iEALCb,MAAA,CAAAS,sBAAsB,E,OApCzCZ,mBAAA,gBA6CMA,mBAAA,qFAAwF,E,gBACxFF,mBAAA,CAME;IApDR,uBAAAG,MAAA,QAAAA,MAAA,MAAAC,MAAA,IA+CiBC,MAAA,CAAAc,SAAS,GAAAf,MAAA;IAClBG,IAAI,EAAC,MAAM;IACXX,KAAK,EAAC,2CAA2C;IACjDY,WAAW,EAAC,kDAAkD;IAC7DY,QAAQ,EAAEf,MAAA,CAAAK;0BAnDnBW,UAAA,I,cA+CiBhB,MAAA,CAAAc,SAAS,E,GAOpBjB,mBAAA,mCAAsC,EACtCF,mBAAA,CAKS;IAJNsB,OAAK,EAAEjB,MAAA,CAAAkB,iBAAiB;IACzB3B,KAAK,EAAC;KACP,sBAED,GAEAM,mBAAA,0BAA6B,EAClBG,MAAA,CAAAmB,KAAK,I,cAAhB1B,mBAAA,CAAoE,OAApE2B,UAAoE,EAAAC,gBAAA,CAAdrB,MAAA,CAAAmB,KAAK,oBA/DjEtB,mBAAA,gBAiEMA,mBAAA,iCAAoC,EACzBG,MAAA,CAAAsB,QAAQ,a,cAAnB7B,mBAAA,CAGM,OAHN8B,UAGM,G,0BAFJ5B,mBAAA,CAAuE;IAAnEJ,KAAK,EAAC;EAAmC,GAAC,sBAAoB,sBAClEI,mBAAA,CAAiE,KAAjE6B,UAAiE,EAAAH,gBAAA,CAAfrB,MAAA,CAAAsB,QAAQ,iB,KApElEzB,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}