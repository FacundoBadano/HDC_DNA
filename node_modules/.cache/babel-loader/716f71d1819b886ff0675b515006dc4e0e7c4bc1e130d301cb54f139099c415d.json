{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"w-3/4\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"text-red-500 mt-4\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"mt-4\"\n};\nconst _hoisted_4 = {\n  class: \"bg-gray-100 p-2 rounded\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[3] || (_cache[3] = _createElementVNode(\"h1\", {\n    class: \"text-2xl font-bold mb-4 text-center\"\n  }, \" Calculadora de Distancia entre Secuencias ADN \", -1 /* HOISTED */)), _cache[4] || (_cache[4] = _createElementVNode(\"div\", {\n    class: \"bg-blue-500 text-white p-4 rounded\"\n  }, \" Indicar ambas secuencias para calcular su distancia. \", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.sequence1 = $event),\n    type: \"text\",\n    class: \"border border-gray-300 rounded p-2 mb-4 w-full\",\n    placeholder: \"Ingrese la primera secuencia de ADN (G, T, C, A)\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.sequence1]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.sequence2 = $event),\n    type: \"text\",\n    class: \"border border-gray-300 rounded p-2 mb-4 w-full\",\n    placeholder: \"Ingrese la segunda secuencia de ADN (G, T, C, A)\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.sequence2]]), _createElementVNode(\"button\", {\n    onClick: $setup.calculateDistance,\n    class: \"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\n  }, \" Calcular Distancia \"), $setup.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString($setup.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $setup.distance !== null ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_cache[2] || (_cache[2] = _createElementVNode(\"h2\", {\n    class: \"text-xl font-semibold\"\n  }, \"Distancia Calculada:\", -1 /* HOISTED */)), _createElementVNode(\"p\", _hoisted_4, _toDisplayString($setup.distance), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_cache","$event","$setup","sequence1","type","placeholder","sequence2","onClick","calculateDistance","error","_hoisted_2","_toDisplayString","_createCommentVNode","distance","_hoisted_3","_hoisted_4"],"sources":["/var/www/html/HDC_ADN/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"w-3/4\">\n    <h1 class=\"text-2xl font-bold mb-4 text-center\">\n      Calculadora de Distancia entre Secuencias ADN\n    </h1>\n\n    <div class=\"bg-blue-500 text-white p-4 rounded\">\n      Indicar ambas secuencias para calcular su distancia.\n    </div>\n\n    <input\n      v-model=\"sequence1\"\n      type=\"text\"\n      class=\"border border-gray-300 rounded p-2 mb-4 w-full\"\n      placeholder=\"Ingrese la primera secuencia de ADN (G, T, C, A)\"\n    />\n\n    <input\n      v-model=\"sequence2\"\n      type=\"text\"\n      class=\"border border-gray-300 rounded p-2 mb-4 w-full\"\n      placeholder=\"Ingrese la segunda secuencia de ADN (G, T, C, A)\"\n    />\n\n    <button\n      @click=\"calculateDistance\"\n      class=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\n    >\n      Calcular Distancia\n    </button>\n\n    <div v-if=\"error\" class=\"text-red-500 mt-4\">{{ error }}</div>\n    <div v-if=\"distance !== null\" class=\"mt-4\">\n      <h2 class=\"text-xl font-semibold\">Distancia Calculada:</h2>\n      <p class=\"bg-gray-100 p-2 rounded\">{{ distance }}</p>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from \"vue\";\nimport axios from \"axios\";\n\nconst sequence1 = ref(\"\");\nconst sequence2 = ref(\"\");\nconst distance = ref(null);\nconst error = ref(null);\n\nconst calculateDistance = async () => {\n  distance.value = null;\n  error.value = null;\n\n  if (!sequence1.value || !sequence2.value) {\n    error.value = \"Por favor, ingrese ambas secuencias.\";\n    return;\n  }\n\n  try {\n    const response = await axios.post(\"http://127.0.0.1:8000/generate-hv\", {\n      sequence1: sequence1.value,\n      sequence2: sequence2.value,\n    });\n\n    distance.value = response.data.distance.toFixed(4);\n  } catch (err) {\n    error.value =\n      err.response?.data?.detail || \"Error al comunicarse con el servidor.\";\n  }\n};\n</script>\n\n<style>\npre {\n  white-space: pre-wrap;\n  word-wrap: break-word;\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAO;;EADpBC,GAAA;EA+BsBD,KAAK,EAAC;;;EA/B5BC,GAAA;EAgCkCD,KAAK,EAAC;;;EAE/BA,KAAK,EAAC;AAAyB;;uBAjCtCE,mBAAA,CAmCM,OAnCNC,UAmCM,G,0BAlCJC,mBAAA,CAEK;IAFDJ,KAAK,EAAC;EAAqC,GAAC,iDAEhD,sB,0BAEAI,mBAAA,CAEM;IAFDJ,KAAK,EAAC;EAAoC,GAAC,wDAEhD,sB,gBAEAI,mBAAA,CAKE;IAfN,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAWeC,MAAA,CAAAC,SAAS,GAAAF,MAAA;IAClBG,IAAI,EAAC,MAAM;IACXT,KAAK,EAAC,gDAAgD;IACtDU,WAAW,EAAC;iDAHHH,MAAA,CAAAC,SAAS,E,mBAMpBJ,mBAAA,CAKE;IAtBN,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAkBeC,MAAA,CAAAI,SAAS,GAAAL,MAAA;IAClBG,IAAI,EAAC,MAAM;IACXT,KAAK,EAAC,gDAAgD;IACtDU,WAAW,EAAC;iDAHHH,MAAA,CAAAI,SAAS,E,GAMpBP,mBAAA,CAKS;IAJNQ,OAAK,EAAEL,MAAA,CAAAM,iBAAiB;IACzBb,KAAK,EAAC;KACP,sBAED,GAEWO,MAAA,CAAAO,KAAK,I,cAAhBZ,mBAAA,CAA6D,OAA7Da,UAA6D,EAAAC,gBAAA,CAAdT,MAAA,CAAAO,KAAK,oBA/BxDG,mBAAA,gBAgCeV,MAAA,CAAAW,QAAQ,a,cAAnBhB,mBAAA,CAGM,OAHNiB,UAGM,G,0BAFJf,mBAAA,CAA2D;IAAvDJ,KAAK,EAAC;EAAuB,GAAC,sBAAoB,sBACtDI,mBAAA,CAAqD,KAArDgB,UAAqD,EAAAJ,gBAAA,CAAfT,MAAA,CAAAW,QAAQ,iB,KAlCpDD,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}